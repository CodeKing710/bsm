#!/bin/bash

# BSM's main code

# Set some configs prior to loading
autoupdate=`cat $HOME/.bsm/.cfg | grep 'autoupdate' | cut -d '=' -f2`
repo=`find $HOME -type d -name bsm`

# Check for unit test
if [[ $BSM_TST ]]; then
  # Load the lib from the repo and set prgroot to repo
  echo -e "[BSM] UNIT TEST MODE! READING FROM REPO!"
  source $repo/.bsm/.lib
  prgroot="$repo/.bsm"
elif [[ "$autoupdate" == "true" ]]; then
  # Check for updates
  [ ! -d $HOME/.bsm ] && $repo/install
  if [[ `diff $repo/.bsm/.lib $HOME/.bsm/.lib` || `diff $(find $HOME -type d -name bsm)/.bsm/version $HOME/.bsm/version` || `diff $repo/.bsm/help $HOME/.bsm/help` || `diff $repo/bsm $HOME/bin/bsm` ]]; then echo "Update found!"; $repo/install; fi

  # Load lib
  source $HOME/.bsm/.lib
else
  source $HOME/.bsm/.lib
fi

# Run like normal (should select based on prod or test)
__bsm() {
  # Go interactive if no arguments or commands are passed
  if [ -z "$1" ]; then
    __args --interactive
  else
    if [[ "$1" =~ "-" ]]; then
      # Arg mode
      __args $@
    else
      # Command mode
      __cmds $@
    fi
  fi
}

__bsm $@

# Cleanup for accidental sourcing
[ "$$" -eq "$BASHPID" ] && unset __bsm __args __sh __cmds __create __open __remove __rename __config __list __cwd __cws prgroot scriptroot editor autoupdate defaulttype repo lists write error verbose
